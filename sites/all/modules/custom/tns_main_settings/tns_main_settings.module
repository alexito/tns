<?php

/**
 * Implementation hook menu
 */
function tns_main_settings_menu(){
  $items['events-year-month/%'] = array(
    'page callback' => '_tns_main_settings_events_year_month',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


function _tns_main_settings_events_year_month($date) {
  $date .= ' 00:00:01';
  $date2 = date("Y-m-d", strtotime("+1 month", strtotime($date))) . ' 23:59:59';
  
  $inner = new EntityFieldQuery();
  $result = $inner->entityCondition('entity_type', 'field_collection_item')
          ->entityCondition('bundle', 'field_informacion')
          ->fieldCondition('field_fecha', 'value', array($date, $date2), 'BETWEEN')
          ->fieldOrderBy('field_fecha', 'value', 'ASC')
          ->execute();
  
  $start = strtotime($date);
  $end = strtotime($date2);
  $days_between = ceil(abs($end - $start) / 86400);
  
  $field_collection_items = array();
  if (isset($result['field_collection_item'])) {
    $field_collection_item_ids = array_keys($result['field_collection_item']);
    $field_collection_items = field_collection_item_load_multiple($field_collection_item_ids);
  }
  
  $data = new stdClass();
  $data->days = array();
  
  for($i = 1; $i < $days_between; $i++){
    $data->days['_' . $i] = new stdClass();
    $data->days['_' . $i]->count = 0;
    $data->days['_' . $day]->events = array();
  }
  
  foreach ($field_collection_items as $item) {
    $node = $item->hostEntity();
    if ($node->status == 1) {
      $day = intval(date("d", strtotime($item->field_fecha[LANGUAGE_NONE][0]['value'])));
      
      $data->days['_' . $day]->count = $data->days['_' . $day]->count + 1;
    
      $data->days['_' . $day]->events[] = substr($node->title, 0, 22) . '...';
    }
    
  }
  
  return drupal_json_output($data);
}
/**
 * Helper function to get the slider content.
 */
function _tns_main_settings_get_eventos_main_carousel(){ 
  $show_nodes = _tns_main_settings_get_eventos();

  print theme('eventos_main_carousel', array('nodes' => $show_nodes));  
}

function prepare_results($result) {
  $field_collection_items = array();
  if (isset($result['field_collection_item'])) {
    $field_collection_item_ids = array_keys($result['field_collection_item']);
    $field_collection_items = field_collection_item_load_multiple($field_collection_item_ids);
  }
  
  $show_nodes = array();
  
  foreach ($field_collection_items as $item) {
    
    $node = $item->hostEntity();
    if (!isset($show_nodes[$node->nid])) {
      if ($node->status == 1) {
        $wrapper = entity_metadata_wrapper('field_collection_item', $item);
        $f_fecha = $wrapper->field_fecha->value();
        $fecha = strtotime($f_fecha['value']);
        if ($wrapper->field_escenario->value() != null) {
          $escenario = $wrapper->field_escenario->value();
        } elseif($wrapper->field_escenario_externo->value() != null) {
          $escenario = $wrapper->field_escenario_externo->value();
        }
        //$escenario = ($wrapper->field_pertenece_al_tns->value()) ? $wrapper->field_escenario->value() : $wrapper->field_escenario_externo->value();
        $detalles = new stdClass();
        $detalles->fecha = $fecha;
        $detalles->fecha_desde = $f_fecha['value'];
        $detalles->fecha_hasta = $f_fecha['value2'];
        $detalles->escenario = entity_metadata_wrapper('node', $escenario);
        
        $show_nodes[$node->nid] = $node;
        $show_nodes[$node->nid]->detalle = $detalles;
      }
    }
    if (count($show_nodes) == 6){
      break;
    }
  }
  return $show_nodes;
}

function _tns_main_settings_get_eventos(){
  
  $inner = new EntityFieldQuery();
  $result = $inner->entityCondition('entity_type', 'field_collection_item')
          ->entityCondition('bundle', 'field_informacion')
          ->fieldCondition('field_fecha', 'value', date("Y-m-d") . ' 00:00:00', '>=')
          ->fieldOrderBy('field_fecha', 'value', 'ASC')
          ->range(0, 50)
          ->execute();
  
  $show_nodes = prepare_results($result);
  
  if (count($show_nodes) < 6) {
    $inner = new EntityFieldQuery();
    $result = $inner->entityCondition('entity_type', 'field_collection_item')
            ->entityCondition('bundle', 'field_informacion')
            ->fieldCondition('field_fecha', 'value', date("Y-m-d") . ' 00:00:00', '<')
            ->fieldOrderBy('field_fecha', 'value', 'DESC')
            ->range(0, 50)
            ->execute();

    $show_nodes = $show_nodes + prepare_results($result);
  }
  
  return $show_nodes;
}

function _tns_main_settings_calwidget(){ 
  $output = array();
  
  print theme('calwidget', array('output' => $output));  
}

function _tns_main_settings_quienes_somos(){ 
  $output = array();
  
  print theme('quienes_somos', array('output' => $output));  
}

function _tns_main_settings_presentacion_propuestas(){ 
  global $user;
  $output = array();
  module_load_include('inc', 'node', 'node.pages'); 
  $node_form = new stdClass;
  $node_form->type = 'propuesta';
  $node_form->language = LANGUAGE_NONE;
  $node_form->uid = $user->uid;
  $node_form->status = 1;
  $node_form->revision = FALSE;
  $node_form->comment = 0;
  $node_form->promote = 0;
  $node_form->sticky = 0;
  $node_form->log = NULL;
  $form_suscripcion = drupal_get_form('propuesta_node_form', $node_form);
  $form = drupal_render($form_suscripcion);  
  print theme('presentacion_propuestas', array('output' => $output, 'form' => $form));   
}

function _tns_main_settings_suscripcion_form(){
  global $user;
  $output = array();
  module_load_include('inc', 'node', 'node.pages'); 
  $node_form = new stdClass;
  $node_form->type = 'suscripcion';
  $node_form->language = LANGUAGE_NONE;
  $node_form->uid = $user->uid;
  $node_form->status = 1;
  $node_form->revision = FALSE;
  $node_form->comment = 0;
  $node_form->promote = 0;
  $node_form->sticky = 0;
  $node_form->log = NULL;
  $form_suscripcion = drupal_get_form('suscripcion_node_form', $node_form);
  $form = drupal_render($form_suscripcion);
  print theme('suscripcion', array('output' => $output, 'form' => $form));  
}

function _tns_main_settings_contactanos(){ 
  global $user;
  $output = array();
  module_load_include('inc', 'node', 'node.pages'); 
  $node_form = new stdClass;
  $node_form->type = 'contactanos';
  $node_form->language = LANGUAGE_NONE;
  $node_form->uid = $user->uid;
  $node_form->status = 1;
  $node_form->revision = FALSE;
  $node_form->comment = 0;
  $node_form->promote = 0;
  $node_form->sticky = 0;
  $node_form->log = NULL;
  $form_suscripcion = drupal_get_form('suscripcion_node_form', $node_form);
  $form = drupal_render($form_suscripcion);
  print theme('contactanos', array('output' => $output, 'form' => $form));  
}

function _tns_main_settings_logo_revista(){ 
  $output = array();  
  print theme('logorevista', array('output' => $output));  
}

function _tns_main_settings_items_varios(){ 
  $output = _tns_main_settings_get_eventos_queue();  
  print theme('itemsvarios', array('output' => $output));  
}

function _tns_main_settings_evento_proximo(){ 
  $output = _tns_main_settings_get_eventos();  
  print theme('eventoproximo', array('output' => $output));  
}

function _tns_main_settings_fotos_mini($data){ 
  print theme('fotos_mini', array('output' => $data->field_field_fotos));  
}

function _tns_main_settings_get_eventos_queue(){
  $result = db_select('nodequeue_nodes', 'n')
    ->fields('n', array('nid'))
    ->condition('qid', 1)
    ->orderBy('position', 'ASC')
    ->execute()
    ->fetchAll();

  $show_nodes = array();

  foreach ($result as $res) {

    $node = node_load($res->nid);
    if($node->type !== 'patrocinador' && $node->type !== 'convocatorias_noticias' && $node->type !== 'fotos_y_videos'){
      $wnode = entity_metadata_wrapper('node', $node);

      $fc = $wnode->field_informacion->value();
      
      $wrapper = entity_metadata_wrapper('field_collection_item', $fc[0]);
      $f_fecha = $wrapper->field_fecha->value();
      $fecha = $f_fecha['value'];
      if ($wrapper->field_escenario->value() != null) {
        $escenario = $wrapper->field_escenario->value();
      } elseif($wrapper->field_escenario_externo->value() != null) {
        $escenario = $wrapper->field_escenario_externo->value();
      }
      //$escenario = ($wrapper->field_pertenece_al_tns->value()) ? $wrapper->field_escenario->value() : $wrapper->field_escenario_externo->value();
      $detalles = new stdClass();
      $detalles->fecha = $f_fecha;
      $detalles->fecha_desde = $f_fecha['value'];
      $detalles->fecha_hasta = $f_fecha['value2'];
      $detalles->escenario = entity_metadata_wrapper('node', $escenario);
      
      $show_nodes[$res->nid] = $node;
      $show_nodes[$res->nid]->detalle = $detalles;
    }else{
      $show_nodes[$res->nid] = $node;
    }
    
  }
  return $show_nodes;
}
/**
 * Implement hook_init
 */
function tns_main_settings_init(){
  drupal_add_library('system', 'ui.datepicker');
  drupal_add_js("(function ($) { $('.datepicker').datepicker(); })(jQuery);", array('type' => 'inline', 'scope' => 'footer', 'weight' => 5));
}